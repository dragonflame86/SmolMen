from nbtlib import Double

advancement smolmen:technical/interact_bed {
  "criteria": {
    "requirement": {
      "trigger": "minecraft:default_block_use",
      "conditions": {
        "location": [
          {
            "condition": "minecraft:location_check",
            "predicate": {
              "block": {
                "blocks": "#minecraft:beds"
              }
            }
          }
        ]
      }
    }
  },
  "rewards": {
    "function": "smolmen:bed/reject"
  }
}

advancement smolmen:technical/interact_smol_bed {
  "criteria": {
    "requirement": {
      "trigger": "minecraft:player_interacted_with_entity",
      "conditions": {
        "entity": [
          {
            "condition": "minecraft:entity_properties",
            "entity": "this",
            "predicate": {
                "type": "minecraft:interaction",
                "nbt": "{Tags: [\"smolmen.bed.interaction\"]}"
            }
          }
        ]
      }
    }
  },
  "rewards": {
    "function": "smolmen:bed/interact"
  }
}

predicate smolmen:is_sleeping {
  "condition": "minecraft:entity_properties",
  "entity": "this",
  "predicate": {
    "vehicle": {
      "nbt": "{Tags:[\"smolmen.bed.ride\"]}"
    }
  }
}

function ~/reject:
    advancement revoke @s only smolmen:technical/interact_bed
    if block ~ ~ ~ #beds tp @s ~ ~ ~

function ~/interact:
    advancement revoke @s only smolmen:technical/interact_smol_bed
    tag @s add smolmen.source
    
    as @e[type=interaction, sort=nearest, tag=smolmen.bed.interaction, distance=..2, limit=1] at @s function ~/match:
        scoreboard players set #found smolmen.dummy 0
        on target if entity @s[tag=smolmen.source] scoreboard players set #found smolmen.dummy 1

        if score #found smolmen.dummy matches 1 function ~/../found:
            
            execute function ~/ride:
                unless predicate smolmen:can_sleep return run title @p[tag=smolmen.source] actionbar {"translate": "block.minecraft.bed.no_sleep"} 
                if entity @e[type=#smolmen:hostile,distance=..8] return run title @p[tag=smolmen.source] actionbar {"translate": "block.minecraft.bed.not_safe"}
                on vehicle on passengers on passengers if entity @s[type=player] return run title @p[tag=smolmen.source] actionbar {"translate": "block.minecraft.bed.occupied"}

                unless entity @e[type=#smolmen:hostile,distance=..8] if predicate smolmen:can_sleep:
                    ride @p[tag=smolmen.source] mount @e[type=armor_stand,tag=smolmen.bed.ride,limit=1,distance=..0.1]

            as @p[tag=smolmen.source,team=red] if entity @e[type=marker,tag=smolmen.blue_base,distance=..128] return run title @s actionbar "Too close to enemy base to set spawn."
            as @p[tag=smolmen.source,team=blue] if entity @e[type=marker,tag=smolmen.red_base,distance=..128] return run title @s actionbar "Too close to enemy base to set spawn."

            store result score #x smolmen.dummy data get entity @p[tag=smolmen.source] SpawnX
            store result score #y smolmen.dummy data get entity @p[tag=smolmen.source] SpawnY
            store result score #z smolmen.dummy data get entity @p[tag=smolmen.source] SpawnZ

            store result score #px smolmen.dummy data get entity @s Pos[0]
            store result score #py smolmen.dummy data get entity @s Pos[1]
            store result score #pz smolmen.dummy data get entity @s Pos[2]

            if score #x smolmen.dummy = #px smolmen.dummy:
                if score #y smolmen.dummy = #py smolmen.dummy:
                    if score #z smolmen.dummy = #pz smolmen.dummy:
                        return 0
                        
            tellraw @p[tag=smolmen.source] {"translate": "block.minecraft.set_spawn"}
            spawnpoint @p[tag=smolmen.source] ~ ~ ~

            tag @p[tag=smolmen.source] add smolmen.bed.spawn_point

    tag @s remove smolmen.source


function ~/place:
    if entity @s[gamemode=adventure] return 0
    
    $data modify storage smolmen:temp slot set value "$(slot)"
    store result score #d smolmen.dummy attribute @s minecraft:player.block_interaction_range get 10
    anchored eyes positioned ^ ^ ^0.1 function ~/cast:
        scoreboard players remove #d smolmen.dummy 1   

        unless block ^ ^ ^0.1 #smolmen:air return run align xyz positioned ~.5 ~ ~.5 unless entity @e[tag=smolmen.bed, distance=..0.1] function ~/../summon with storage smolmen:temp {}:
            $item replace entity @s[gamemode=!creative] weapon.$(slot) with air
            playsound minecraft:block.wood.place block @a 
            summon item_display ~ ~ ~ {
                item: {
                    id: 'minecraft:warped_fungus_on_a_stick',
                    components: {
                        "minecraft:custom_model_data": 1
                    }
                },
                transformation: {
                    translation: [0.0, 0.5, 0.0],
                    left_rotation: [0, 0, 0, 1],
                    right_rotation: [0, 0, 0, 1],
                    scale: [1, 1, 1]
                },
                Tags: ["smolmen.bed", "smolmen.bed.part"],
                Passengers: [
                    {
                        id: 'minecraft:interaction',
                        height: 0.125,
                        width: 0.5,
                        Tags: ["smolmen.bed.interaction", "smolmen.bed.part"]
                    },
                    {
                        id: 'minecraft:armor_stand',
                        Invisible: 1b,
                        Attributes: [{Base: Double(0.08), Name: "minecraft:generic.scale"}, {Base: Double(0), Name: "minecraft:generic.max_health"}],
                        Tags: ["smolmen.bed.ride", "smolmen.bed.part"]
                    }
                ] 
            }

        if score #d smolmen.dummy matches 1.. positioned ^ ^ ^0.1 function ~/

append function ~/tick:
    unless predicate smolmen:can_sleep return run tp @s ~ ~1 ~
    scoreboard players add #sleepingPlayers smolmen.dummy 1

append function ~/reset_spawn:
    tellraw @s {"translate": "block.minecraft.spawn.not_valid"}
    if entity @s[team=red] at @e[tag=smolmen.red_base] function ~/go_to_base
    if entity @s[team=blue] at @e[tag=smolmen.blue_base] function ~/go_to_base:
        tp @s ~ ~ ~ 0 0
        spawnpoint @s ~ ~ ~

    tag @s remove smolmen.bed.spawn_point
    

append function ./respawn:
    if entity @s[tag=smolmen.bed.spawn_point] at @s unless entity @e[type=item_display,tag=smolmen.bed,distance=..0.25] function ./bed/reset_spawn with storage smolmen:const world_spawn

append function ./player/wfoas:
    raw execute if items entity @s weapon.mainhand warped_fungus_on_a_stick[custom_data~{smithed:{id:"smolmen:bed"}}] run function smolmen:bed/place {slot: "mainhand"}
    raw execute unless items entity @s weapon.mainhand warped_fungus_on_a_stick if items entity @s weapon.offhand warped_fungus_on_a_stick[custom_data~{smithed:{id:"smolmen:bed"}}] run function smolmen:bed/place {slot: "offhand"}

append function ~/break:
    on passengers unless entity @s[type=player] kill @s
    kill @s
    playsound minecraft:block.wood.break block @a
    summon item ~ ~ ~ {
        Item: {
            id: "minecraft:warped_fungus_on_a_stick",
            count: 1,
            components: {
                "minecraft:custom_model_data": 1,
                "minecraft:item_name": "{\"translate\":\"item.smolmen.bed\"}",
                "minecraft:max_stack_size": 1,
                "minecraft:custom_data": {
                    smithed: {
                        id: "smolmen:bed"
                    }
                }
            }
        },
        Motion: [0.0, 0.1, 0.0]
    }
append function ./tick:
    store result score #totalPlayers smolmen.dummy if entity @a
    scoreboard players set #sleepingPlayers smolmen.dummy 0
    as @a[predicate=smolmen:is_sleeping] at @s function ./bed/tick
    as @e[type=item_display,tag=smolmen.bed] at @s if block ~ ~-1 ~ #smolmen:air function ./bed/break
    store result score #sleepingPercentage smolmen.dummy gamerule playersSleepingPercentage

    scoreboard players operation #requiredPlayers smolmen.dummy = #totalPlayers smolmen.dummy
    scoreboard players operation #requiredPlayers smolmen.dummy *= #sleepingPercentage smolmen.dummy    
    scoreboard players operation #requiredPlayers smolmen.dummy /= #100 smolmen.const
    scoreboard players add #requiredPlayers smolmen.dummy 1

    if score #sleepingPlayers smolmen.dummy matches 1.. unless score #totalPlayers smolmen.dummy matches 1 title @a actionbar {
        "translate": "sleep.players_sleeping", 
        "with": [
            {"score": {"objective": "smolmen.dummy", "name": "#sleepingPlayers"}},
            {"score": {"objective": "smolmen.dummy", "name": "#requiredPlayers"}}
        ]
    }
    
    if score #sleepingPlayers smolmen.dummy >= #requiredPlayers smolmen.dummy time add 5s