
CROP_OFFERS = [
    "minecraft:oak_sapling",
    "minecraft:spruce_sapling",
    "minecraft:birch_sapling",
    "minecraft:dark_oak_sapling",
    "minecraft:acacia_sapling",
    "minecraft:jungle_sapling",
    "minecraft:mangrove_propagule",
]

MOB_OFFERS = [
    "minecraft:sheep_spawn_egg",
    "minecraft:pig_spawn_egg",
    "minecraft:cow_spawn_egg",
    "minecraft:chicken_spawn_egg",
    "minecraft:armadillo_spawn_egg",
    "minecraft:salmon_spawn_egg",
    "minecraft:cod_spawn_egg",
    "minecraft:tropical_fish_spawn_egg",
    "minecraft:pufferfish_spawn_egg"
]

ORE_OFFERS = {
    "minecraft:coal": 8,
    "minecraft:iron_ingot": 4,
    "minecraft:gold_ingot": 3,
    "minecraft:diamond": 2,
    "minecraft:redstone": 16,
    "minecraft:lapis_lazuli": 16
}

function ~/randomize_offers:
    data modify storage smolmen:temp trades set value []

    store result score #rand smolmen.dummy random value (0, len(CROP_OFFERS) - 1) 
    for i in range(len(CROP_OFFERS)):
        if score #rand smolmen.dummy matches i data modify storage smolmen:temp trades append value {
            sell: {
                id: CROP_OFFERS[i],
                count: 1
            },
            buy: {
                id: "minecraft:emerald",
                count: 2
            },
            maxUses: 2
        }

    store result score #rand smolmen.dummy random value (0, len(MOB_OFFERS) - 1) 
    for i in range(len(MOB_OFFERS)):
        if score #rand smolmen.dummy matches i data modify storage smolmen:temp trades append value {
            sell: {
                id: MOB_OFFERS[i],
                count: 1
            },
            buy: {
                id: "minecraft:emerald",
                count: 4
            },
            maxUses: 2
        }

    store result score #rand smolmen.dummy random value (0, len(ORE_OFFERS.keys()) - 1) 
    i = 0
    for k in ORE_OFFERS:
        if score #rand smolmen.dummy matches i data modify storage smolmen:temp trades append value {
            sell: {
                id: "minecraft:emerald",
                count: 1
            },
            buy: {
                id: k,
                count: ORE_OFFERS[k]
            },
            maxUses: 4
        }
        i += 1


function ~/spawn:
    summon item_display ~ ~ ~ {
        Tags:["smolmen.trader"],
        Passengers: [
            {
                id: "minecraft:wandering_trader",
                Invulnerable: 1b,
                Offers: {
                    Recipes: [
                        {
                            sell: {
                                id: "minecraft:barrier",
                                count: 1
                            },
                            buy: {
                                id: "minecraft:barrier",
                                count: 1
                            }
                        }
                    ]
                }
            }
        ]
    }
    as @e[tag=smolmen.trader,limit=1,sort=nearest] on passengers data modify entity @s Offers.Recipes set from storage smolmen:temp trades

predicate ~/is_noon {
    "condition": "minecraft:time_check",
    "value": 6000,
    "period": 24000
}

function ~/update_all:
    function ~/../randomize_offers
    as @e[tag=smolmen.trader] on passengers data modify entity @s Offers.Recipes set from storage smolmen:temp trades

function ~/tick:
    tag @a[distance=..12] add smolmen.restricted
    as @e[type=creeper, distance=..16, tag=!smolmen.restricted] function ./trader/restrict_creepers:
        data merge entity @s {ExplosionRadius: 0}
        tag @s add smolmen.restricted

    kill @e[type=tnt, distance=..16, nbt={fuse: 1s}] 
    kill @e[type=item_display,tag=combatplus.arc_star, distance=..12]


append function ./tick:
    if predicate smolmen:trader/is_noon function ./trader/update_all
    
   